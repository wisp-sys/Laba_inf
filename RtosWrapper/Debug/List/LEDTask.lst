###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.2.214/W32 for ARM         11/Mar/2021  10:11:08
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  C:\Users\User\Desktop\RtosWrapper\Application\LEDTask.cpp
#    Command line =
#        -f C:\Users\User\AppData\Local\Temp\EW55B5.tmp
#        (C:\Users\User\Desktop\RtosWrapper\Application\LEDTask.cpp -lC
#        C:\Users\User\Desktop\RtosWrapper\Debug\List -lA
#        C:\Users\User\Desktop\RtosWrapper\Debug\List -o
#        C:\Users\User\Desktop\RtosWrapper\Debug\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\wrapper\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\wrapper\FreeRtos\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\FreeRtos\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\FreeRtos\include\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\FreeRtos\portable\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\FreeRtos\portable\Common\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\FreeRtos\portable\IAR\ -I
#        C:\Users\User\Desktop\RtosWrapper\Rtos\FreeRtos\portable\IAR\ARM_CM4F\
#        -I C:\Users\User\Desktop\RtosWrapper\Rtos\FreeRtos\portable\MemMang\
#        -I C:\Users\User\Desktop\RtosWrapper\MyTasks\ -I
#        C:\Users\User\Desktop\RtosWrapper\Common\ -I
#        C:\Users\User\Desktop\RtosWrapper\CMSIS\ -I
#        C:\Users\User\Desktop\RtosWrapper\Application\ -I
#        C:\Users\User\Desktop\RtosWrapper\Application\Diagnostic\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\GpioPort\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\IrqController\ -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\AbstractHardware\Pin\
#        -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\AbstractHardware\Registers\STM32F411\FieldValues\
#        -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\AbstractHardware\Registers\STM32F411\
#        -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\AbstractHardware\Registers\
#        -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\AbstractHardware\Port\
#        -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\AbstractHardware\Atomic\
#        -I C:\Users\User\Desktop\RtosWrapper\..\CortexLib\Common\ -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\Common\Singleton\ -I
#        C:\Users\User\Desktop\RtosWrapper\..\CortexLib\Common\RomObject\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\STM32F411\FieldValues\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\CortexM4\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\CortexM4\FieldValues\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\CortexM4\ -I
#        C:\Users\User\Desktop\RtosWrapper\AHardware\STM32F411\ -Ol --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  C:\Users\User\Desktop\RtosWrapper\Debug\List\LEDTask.lst
#    Object file  =  C:\Users\User\Desktop\RtosWrapper\Debug\Obj\LEDTask.o
#
###############################################################################

C:\Users\User\Desktop\RtosWrapper\Application\LEDTask.cpp
      1          #include "LEDTask.hpp"

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::system_clock::is_steady
   \                     _ZNSt6chrono12system_clock9is_steadyE:
   \        0x0   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::system_clock::is_monotonic
   \                     _ZNSt6chrono12system_clock12is_monotonicE:
   \        0x0   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   __absolute bool const std::chrono::steady_clock::is_steady
   \                     _ZNSt6chrono12steady_clock9is_steadyE:
   \        0x0   0x01               DC8 1

   \                                 In section .text, align 2
   \   __interwork __vfp uint32_t OsWrapper::RtosWrapper::wWaitEvent(void * const &, uint32_t, uint32_t, OsWrapper::EventMode)
   \                     _ZN9OsWrapper11RtosWrapper10wWaitEventERKPvjjNS_9EventModeE: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x001C             MOVS     R4,R3
   \        0x4   0x2300             MOVS     R3,#+0
   \        0x6   0x2C00             CMP      R4,#+0
   \        0x8   0xD100             BNE.N    ??wWaitEvent_0
   \        0xA   0x2300             MOVS     R3,#+0
   \                     ??wWaitEvent_0: (+1)
   \        0xC   0x9200             STR      R2,[SP, #+0]
   \        0xE   0x2201             MOVS     R2,#+1
   \       0x10   0x6800             LDR      R0,[R0, #+0]
   \       0x12   0x....'....        BL       xEventGroupWaitBits
   \       0x16   0xBD16             POP      {R1,R2,R4,PC}    ;; return

   \                                 In section .text, align 2
   \   __code __interwork __vfp OsWrapper::IThread::subobject IThread()
   \                     _ZN9OsWrapper7IThreadC2Ev: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN9OsWrapper7IThreadC1Ev
   \        0x6   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __vfp OsWrapper::IThread::IThread()
   \                     _ZN9OsWrapper7IThreadC1Ev: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0x6541             STR      R1,[R0, #+84]
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x6581             STR      R1,[R0, #+88]
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __vfp OsWrapper::Thread<128U>::subobject Thread()
   \                     _ZN9OsWrapper6ThreadILj128EEC2Ev: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....'....        BL       _ZN9OsWrapper6ThreadILj128EEC1Ev
   \        0x6   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __vfp OsWrapper::Thread<128U>::Thread()
   \                     _ZN9OsWrapper6ThreadILj128EEC1Ev: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x....'....        BL       _ZN9OsWrapper7IThreadC2Ev
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __vfp uint32_t OsWrapper::Event::Wait(OsWrapper::EventMode, uint32_t) const
   \                     _ZNK9OsWrapper5Event4WaitENS_9EventModeEj: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x000B             MOVS     R3,R1
   \        0x4   0x0011             MOVS     R1,R2
   \        0x6   0x69C2             LDR      R2,[R0, #+28]
   \        0x8   0x....'....        BL       _ZN9OsWrapper11RtosWrapper10wWaitEventERKPvjjNS_9EventModeE
   \        0xC   0xBD02             POP      {R1,PC}          ;; return
      2          
      3          

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __vfp LedTask::subobject LedTask(ILed &, std::chrono::milliseconds, OsWrapper::Event &)
   \                     _ZN7LedTaskC2ER4ILedNSt6chrono8durationIxSt5ratioILx1ELx1000EEEERN9OsWrapper5EventE: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x9C04             LDR      R4,[SP, #+16]
   \        0x4   0x9400             STR      R4,[SP, #+0]
   \        0x6   0x....'....        BL       _ZN7LedTaskC1ER4ILedNSt6chrono8durationIxSt5ratioILx1ELx1000EEEERN9OsWrapper5EventE
   \        0xA   0xBD16             POP      {R1,R2,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
      4          LedTask::LedTask(ILed& Lled, std::chrono::milliseconds aPeriod, Event& ievent) : led(Lled), period(aPeriod), event(ievent)
      5          {
   \                     _ZN7LedTaskC1ER4ILedNSt6chrono8durationIxSt5ratioILx1ELx1000EEEERN9OsWrapper5EventE: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000F             MOVS     R7,R1
   \        0x8   0x0014             MOVS     R4,R2
   \        0xA   0x001D             MOVS     R5,R3
   \        0xC   0xF8DD 0x8018      LDR      R8,[SP, #+24]
   \       0x10   0x0030             MOVS     R0,R6
   \       0x12   0x....'....        BL       _ZN9OsWrapper6ThreadILj128EEC2Ev
   \       0x16   0x....             LDR.N    R0,??DataTable1
   \       0x18   0x6030             STR      R0,[R6, #+0]
   \       0x1A   0xF8C6 0x725C      STR      R7,[R6, #+604]
   \       0x1E   0xF8C6 0x8260      STR      R8,[R6, #+608]
   \       0x22   0xF516 0x701A      ADDS     R0,R6,#+616
   \       0x26   0xE9C0 0x4500      STRD     R4,R5,[R0, #+0]
      6            
      7          }
   \       0x2A   0x0030             MOVS     R0,R6
   \       0x2C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
      8          

   \                                 In section .text, align 2, keep-with-next
      9          void LedTask::Execute()
     10          {
   \                     _ZN7LedTask7ExecuteEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     11            for(;;)
     12            {
     13          
     14              auto test = event.Wait();
   \                     ??Execute_0: (+1)
   \        0x4   0x22FF             MOVS     R2,#+255
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0xF8D4 0x0260      LDR      R0,[R4, #+608]
   \        0xC   0x....'....        BL       _ZNK9OsWrapper5Event4WaitENS_9EventModeEj
     15              if (test != 0) 
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD0F7             BEQ.N    ??Execute_0
     16              {
     17                led.Toggle();
   \       0x14   0xF8D4 0x025C      LDR      R0,[R4, #+604]
   \       0x18   0xF8D4 0x125C      LDR      R1,[R4, #+604]
   \       0x1C   0x6809             LDR      R1,[R1, #+0]
   \       0x1E   0x6809             LDR      R1,[R1, #+0]
   \       0x20   0x4788             BLX      R1
   \       0x22   0xE7EF             B.N      ??Execute_0
     18              }
     19              
     20             
     21             
     22              //Sleep(period);
     23            }
     24          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     _ZTV7LedTask+0x8

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   LedTask::Execute()
         8   -- Indirect call
         8   -> OsWrapper::Event::Wait(OsWrapper::EventMode, uint32_t) const
      24   LedTask::LedTask(ILed &, std::chrono::milliseconds, OsWrapper::Event &)
        24   -> OsWrapper::Thread<128U>::subobject Thread()
      16   LedTask::subobject LedTask(ILed &, std::chrono::milliseconds, OsWrapper::Event &)
        16   -> LedTask::LedTask(ILed &, std::chrono::milliseconds, OsWrapper::Event &)
       8   OsWrapper::Event::Wait(OsWrapper::EventMode, uint32_t) const
         8   -> OsWrapper::RtosWrapper::wWaitEvent(void * const &, uint32_t, uint32_t, OsWrapper::EventMode)
       0   OsWrapper::IThread::IThread()
       8   OsWrapper::IThread::subobject IThread()
         8   -> OsWrapper::IThread::IThread()
      16   OsWrapper::RtosWrapper::wWaitEvent(void * const &, uint32_t, uint32_t, OsWrapper::EventMode)
        16   -> xEventGroupWaitBits
       8   OsWrapper::Thread<128U>::Thread()
         8   -> OsWrapper::IThread::subobject IThread()
       8   OsWrapper::Thread<128U>::subobject Thread()
         8   -> OsWrapper::Thread<128U>::Thread()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      36  LedTask::Execute()
      48  LedTask::LedTask(ILed &, std::chrono::milliseconds, OsWrapper::Event &)
      12  LedTask::subobject LedTask(ILed &, std::chrono::milliseconds, OsWrapper::Event &)
      14  OsWrapper::Event::Wait(OsWrapper::EventMode, uint32_t) const
      10  OsWrapper::IThread::IThread()
       8  OsWrapper::IThread::subobject IThread()
      24  OsWrapper::RtosWrapper::wWaitEvent(void * const &, uint32_t, uint32_t, OsWrapper::EventMode)
      14  OsWrapper::Thread<128U>::Thread()
       8  OsWrapper::Thread<128U>::subobject Thread()
       1  std::chrono::steady_clock::is_steady
       1  std::chrono::system_clock::is_monotonic
       1  std::chrono::system_clock::is_steady
     148  -- Other

 
 151 bytes in section .rodata
 178 bytes in section .text
 
 100 bytes of CODE  memory (+  78 bytes shared)
   0 bytes of CONST memory (+ 151 bytes shared)

Errors: none
Warnings: none
